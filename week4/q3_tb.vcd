$date
	Thu Sep 22 09:55:11 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module q3_tb $end
$var wire 4 ! s [3:0] $end
$var wire 1 " carryout $end
$var reg 1 # k $end
$var reg 4 $ x [3:0] $end
$var reg 4 % y [3:0] $end
$scope module a1 $end
$var wire 1 # k $end
$var wire 4 & x [3:0] $end
$var wire 4 ' y [3:0] $end
$var wire 4 ( w [3:0] $end
$var wire 4 ) s [3:0] $end
$var wire 1 " carryout $end
$var wire 3 * c [3:1] $end
$scope module stage0 $end
$var wire 1 + cin $end
$var wire 1 , cout $end
$var wire 1 - s $end
$var wire 1 . x $end
$var wire 1 # y $end
$upscope $end
$scope module stage1 $end
$var wire 1 / cin $end
$var wire 1 0 cout $end
$var wire 1 1 s $end
$var wire 1 2 x $end
$var wire 1 3 y $end
$upscope $end
$scope module stage2 $end
$var wire 1 4 cin $end
$var wire 1 5 cout $end
$var wire 1 6 s $end
$var wire 1 7 x $end
$var wire 1 8 y $end
$upscope $end
$scope module stage3 $end
$var wire 1 9 cin $end
$var wire 1 " cout $end
$var wire 1 : s $end
$var wire 1 ; x $end
$var wire 1 < y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1<
1;
1:
19
18
17
16
15
14
13
12
01
10
0/
1.
0-
1,
1+
b111 *
b1100 )
b1111 (
b1111 '
b1101 &
b1111 %
b1101 $
0#
1"
b1100 !
$end
#20
1"
06
0:
11
0.
07
12
1;
b10 !
b10 )
0-
09
1/
b1010 (
b101 %
b101 '
b111 $
b111 &
1#
#40
