$date
	Thu Oct  6 09:37:18 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module q4_tb $end
$var wire 1 ! lesser $end
$var wire 1 " greater $end
$var wire 1 # equal $end
$var reg 4 $ a [3:0] $end
$var reg 4 % b [3:0] $end
$scope module Q $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 # equal $end
$var wire 1 ! greater $end
$var wire 1 " lesser $end
$var wire 1 ( l2 $end
$var wire 1 ) l1 $end
$var wire 1 * g2 $end
$var wire 1 + g1 $end
$var wire 1 , c2 $end
$var wire 1 - c1 $end
$scope module stage1 $end
$var wire 1 . a1 $end
$var wire 1 / a2 $end
$var wire 1 0 b1 $end
$var wire 1 1 b2 $end
$var wire 1 - equal $end
$var wire 1 + greater $end
$var wire 1 ) lesser $end
$upscope $end
$scope module stage2 $end
$var wire 1 2 a1 $end
$var wire 1 3 a2 $end
$var wire 1 4 b1 $end
$var wire 1 5 b2 $end
$var wire 1 , equal $end
$var wire 1 * greater $end
$var wire 1 ( lesser $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
15
14
13
12
11
10
1/
1.
1-
1,
1+
1*
0)
0(
b1111 '
b1111 &
b1111 %
b1111 $
1#
0"
1!
$end
#20
1(
0#
0,
0*
00
05
0.
b1001 %
b1001 '
b1011 $
b1011 &
#40
0!
0+
0(
1#
1,
01
10
0/
1.
03
b101 %
b101 '
b101 $
b101 &
#60
